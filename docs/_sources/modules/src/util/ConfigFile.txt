.. default-domain:: chpl

.. module:: ConfigFile

ConfigFile
==========
**Usage**

.. code-block:: chapel

   use ConfigFile;

.. class:: ConfigFile

   
   * Represents a configuration file


   .. attribute:: var configFile: file

   .. attribute:: var configFilePath: string

   .. attribute:: var configMapDomain: domain(string)

   .. attribute:: var configMap: [configMapDomain] string

   .. method:: proc ConfigFile()

      
      * Default constructor
      * Throws an error if it cannot find the user's home directory or cannot
      *        open the default config file located at ~/.ctradeconf
      

   .. method:: proc ConfigFile.~ConfigFile()

      
      * Destructor
      

   .. method:: proc addProperty(property: string, value: string)

      
      * addProperty
      * Adds property with associated value to the ConfigFile map if both
      *      property and value are not empty.
      *
      * property - the property to add
      * value - the value to add
      *
      * Note: property maps to value, i.e. property=>value
      

   .. method:: proc getPropertyValue(property: string): string

      
      * getPropertyValue
      * Returns the value associated with property in the ConfigFile map
      * If the property is not in configMapDomain, return "NULL"
      *
      * property - the property
      

   .. method:: proc getHomeDir(): string

      
      * getHomeDir()
      * Returns a string containing the home directory of the user or throws
      *      an Error if this is not possible
      

   .. method:: proc writeToConfigFile()

      
      * writeToConfigFile
      * Writes the current configuration of ConfigFile to the default
      *        configuration file. This erases the file before writing.
      

   .. method:: proc sanitizeConfigFileMap()

      
      * sanitizeConfigFileMap
      * Sanitizes the ConfigFile map by removing empty keys and values
      

